// Generated by CoffeeScript 1.6.3
(function() {
  var Instagram, app, express, jp2a, moment, parseImages, renderHtml, renderImage, searchPublic, searchUser, streamToWeb, _;

  _ = require('underscore');

  Instagram = require('instagram-node-lib');

  jp2a = require('jp2a');

  moment = require('moment');

  express = require('express');

  app = express();

  Instagram.set('client_id', 'b8b6e83a5194471d936670c484375a5d');

  Instagram.set('client_secret', '7a56b096833d41ff98f55369c837ef0d');

  parseImages = function(photos, pagination) {
    return _.each(photos, function(photo) {
      var author, dateStr, link, url;
      author = photo.user.username;
      url = photo.images.standard_resolution.url;
      dateStr = moment(photo.created_time).fromNow();
      link = photo.link;
      return renderImage(url, author, dateStr, link);
    });
  };

  renderHtml = function(url, cb) {
    return jp2a([url, "--width=75", "--color", "--fill", "--html-raw"], function(asciiArt) {
      return cb(asciiArt);
    });
  };

  renderImage = function(url, author, dateStr, link) {
    return jp2a([url, "--width=75", "--background=light", "--color", "-b", "--fill"], function(asciiArt) {
      console.log(asciiArt);
      console.log(link);
      console.log("By: " + author);
      return console.log(dateStr);
    });
  };

  searchPublic = function() {
    return Instagram.media.popular({
      complete: parseImages
    });
  };

  searchUser = function(user) {
    return Instagram.users.search({
      q: user,
      complete: function(data, pagination) {
        return Instagram.users.recent({
          user_id: data[0].id,
          complete: parseImages
        });
      }
    });
  };

  streamToWeb = function() {
    app.get("/", function(req, res) {
      return Instagram.media.popular({
        complete: function(data, pagination) {
          res.writeHeader(200, {
            "Content-Type": "text/html"
          });
          res.write("<div class='ascii' style='font-size: 8px;'>");
          return _.each(data, function(photo, index) {
            var url;
            url = photo.images.standard_resolution.url;
            renderHtml(url, function(resp) {
              res.write("<div style='float: left;'><pre>");
              res.write(resp);
              return res.write("</pre></div>");
            });
            if (index === data.length) {
              res.write("</div>");
              return res.end();
            }
          });
        }
      });
    });
    return app.listen(8888);
  };

  switch (process.argv[2]) {
    case "user":
      searchUser(process.argv[3]);
      break;
    case "web":
      streamToWeb();
      break;
    default:
      searchPublic();
  }

}).call(this);
